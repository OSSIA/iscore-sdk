#!/bin/bash

source ./common.sh

# LLVM is bootstrapped so that it is all built with the same libc++ version
(
mkdir -p llvm-build
cd llvm-build
cmake -GNinja \
 -DCMAKE_CROSSCOMPILING=True \
 -DLLVM_TABLEGEN=/usr/bin/llvm-tblgen \
 -DLLVM_DEFAULT_TARGET_TRIPLE=wasm32-unknown-unknown-wasm \
 -DLLVM_TARGET_ARCH=wasm32 \
 -DCMAKE_TOOLCHAIN_FILE=$INSTALL_PREFIX/emsdk/upstream/emscripten/cmake/Modules/Platform/Emscripten.cmake \
 -DCMAKE_C_FLAGS="$CFLAGS" \
 -DCMAKE_CXX_FLAGS="$CXXFLAGS" \
 -DCMAKE_BUILD_TYPE=Release \
 -DBUILD_SHARED_LIBS=0 \
 -DLLVM_INCLUDE_TOOLS=0 \
 -DLLVM_BUILD_TOOLS=0 \
 -DLLVM_INCLUDE_EXAMPLES=0 \
 -DLLVM_INCLUDE_TESTS=0 \
 -DLLVM_ENABLE_CXX1Z=1 \
 -DLLVM_TARGETS_TO_BUILD="WebAssembly" \
 -DLLVM_ENABLE_LIBCXX=ON \
 -DLLVM_ENABLE_LLD=OFF \
 -DLLVM_ENABLE_EH=ON \
 -DLLVM_ENABLE_RTTI=ON \
 -DLLVM_ENABLE_OCAMLDOC=OFF \
 -DLLVM_ENABLE_BINDINGS=0 \
 -DLLVM_OCAML_INSTALL_PATH=/tmp/ \
 -DCLANG_DEFAULT_CXX_STDLIB:STRING=libc++ \
 -DLIBCXX_ABI_UNSTABLE=ON \
 -DLIBCXX_USE_COMPILER_RT=OFF \
 -DLIBCXX_ENABLE_STATIC_ABI_LIBRARY=ON \
 -DLIBCXXABI_USE_LLVM_UNWINDER=ON \
 -DLIBCXXABI_ENABLE_STATIC_UNWINDER=ON \
 -DLIBCXXABI_USE_COMPILER_RT=OFF \
 -DLIBUNWIND_USE_COMPILER_RT=OFF \
 -DCOMPILER_RT_USE_BUILTINS_LIBRARY=OFF \
 -DCMAKE_INSTALL_PREFIX=$INSTALL_PREFIX/llvm \
 ../llvm/llvm

cmake --build .
cmake --build . --target install/strip
)
